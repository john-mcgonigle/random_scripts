seq = getSequence(id="SOD1", type = 'hgnc_symbol', seqType="gene", mart = mart)
library("seqinr")
library('biomaRt')
biocLite("biomaRt")
library('Biostrings')
listEnsembl()
mart <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
seq = getSequence(id="SOD1", type = 'hgnc_symbol', seqType="gene", mart = mart)
seq = getSequence(id="SOD1", type = 'hgnc_symbol', seqType="gene_exon_intron", mart = mart)
seq
length(seq[1])
seq[1]
seq[1][1]
type(seq[1])
summary(seq[1])
toString(seq[1])
length(toString(seq[1]))
nchr(toString(seq[1]))
nchar(toString(seq[1]))
toString(seq[1])[1]
seq<-toString(seq[1])
seq
seq[1]
seq[1][1]
unlist(seq)
unlist(seq)[1]
seq_bases<-strsplit(seq)
seq_bases<-strsplit(seq, split='')
seq_bases
seq_bases[1]
seq_bases[1][1]
seq_bases[,1]
seq_bases<-strsplit(seq, split='')[[1]]
seq_bases[1]
seq_bases
seq_bases[1415]
start<-33026948
start+(1414)
seq_bases[1421]
seq_bases[1420]
seq_bases[1422]
ensembl<-read.csv(file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensembl-export-processed.csv')
ensembl<-read.csv(file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensembl-export-processed.csv', header =F)
head(ensembl)
ensembl<-read.csv(file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensembl-export-processed.csv')
head(ensembl)
ensembl<-read.csv(file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensembl-export-processed.csv', header=F)
head(ensembl)
ensembl<-read.csv(file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensembl-export-processed.csv', header=F, '\t')
head(ensembl)
get_distinct<-function(new, old, col_pos, col_alt)
{
new_pos<- new[,col_pos[2]]
old_pos<- old[,col_pos[1]]
new_alt<- new[,col_alt[2]]
old_alt<- old[,col_alt[1]]
filter1<-new_pos%in%old_pos
shared<- new[filter1,]
shared_pos = new_pos[filter1]
potentially_shared_alt = new_alt[filter1]
filter2<-foreach(i = 1:nrow(shared), combine =c) %do%
{
pos<-shared_pos[i]
alt<-potentially_shared_alt[i]
current<-old_alt[old_pos%in%pos]
c(!alt %in% current)
}
filter2<-unlist(filter2)
filter3<-filter1
filter3[filter1]<-filter2
c(filter3 | !filter1)
}
var<-read.csv(file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/sod1_QC.csv')
head(ensembl)
ensemble_unique<-get_distinct(ensembl, var, c(5,5), c(7,7))
library(foreach)
ensemble_unique<-get_distinct(ensembl, var, c(5,5), c(7,7))
table(ensembl)
table(ensemble_unique)
write.csv(ensembl[ensembl,], file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensemble-unique-variants.csv', row.names=F)
write.csv(ensembl[ensemble_unique,], file='/Users/john.mcgonigle/Documents/Projects/Biogen/subsets/ensemble-unique-variants.csv', row.names=F)
vep<-read.csv(filer = '/Users/john.mcgonigle/work_dir/data/sod1_superlist.vcf')
vep<-read.csv(file = '/Users/john.mcgonigle/work_dir/data/sod1_superlist.vcf')
head(vep)
vep<-read.csv(file = '/Users/john.mcgonigle/work_dir/data/sod1_superlist.vcf', sep ='\t')
vep
dat<-read.csv('/Users/john.mcgonigle/work_dir/data/exac_release_1.0/variant_score_per_locus.csv')
# dat<-fread('/Users/john.mcgonigle/work_dir/data/exac_release_1.0/variant_score_per_locus.csv')
dat<-as.data.frame(dat)
head(dat)
chromsomes<-c('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
'13', '14', '15', '16', '17', '18', '19', '20', '21', '22', 'X', 'Y')
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png')
plot(x,-log(y)
dev.off()
}
conservation_plot(dat[,4], dat[,3])
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png')
plot(x,-log(y, 10)
dev.off()
}
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png')
plot(x,-log(y, 10)
dev.off()
}
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png')
plot(x,-log(y, 10))
dev.off()
}
conservation_plot(dat[,4], dat[,3])
dat<-read.csv('/Users/john.mcgonigle/work_dir/data/exac_release_1.0/variant_score_per_locus.csv')
dat<-as.data.frame(dat)
head(dat)
chromsomes<-c('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
'13', '14', '15', '16', '17', '18', '19', '20', '21', '22', 'X', 'Y')
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png', width = 2600, height = 1400)
plot(x,-log(y, 10),
xlab = 'Variants occuring across chromsomes',
ylab = '-log variant frequency score',
col = 'blue',
pch = 15,
cex = 0.1)
dev.off()
}
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png', width = 2600, height = 1400)
plot(x,-log(y, 10),
xlab = 'Variants occuring across chromsomes',
ylab = '-log variant frequency score',
col = 'blue',
pch = 15,
cex = 0.1)
dev.off()
}
conservation_plot(dat[,4], dat[,3])
dev.off()
dev.off()
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png', width = 2600, height = 1400)
plot(x,-log(y, 10),
xlab = 'Variants occuring across chromosomes',
ylab = '-log variant frequency score',
col = 'blue',
pch = 15,
cex = 0.1)
dev.off()
}
conservation_plot(dat[,4], dat[,3])
getwd()
head(dat)
conservation_plot<-function(x,y)
{
png(filename = 'conservation_plot.png', width = 2600, height = 1400)
plot(-log(y, 10) ~ x,
xlab = 'Variants occuring across chromosomes',
ylab = '-log variant frequency score',
col = 'blue',
pch = 15,
cex = 0.2)
dev.off()
}
conservation_plot(dat$Plot_location, dat$Score)
9->v
v
x<-c(1,2,3,3,3,3,4,4,5,6,7,8,9,10,11,11,11,12,12,13,14,15,16,17,17,18,19,20)
x
hist(x)
hist(x, 10)
hist(x, 20)
hist(x, 10)
x*2
x*13
hist(x*13, 20)
hist((x*13)%5)
hist((x*13)%%5, 20)
par(mfrow=c(3,1))
hist(x, 10)
hist(x*13, 20)
hist((x*13)%%5, 20)
hist((x*13)%%13, 20)
par(mfrow=c(3,1))
hist(x, 10)
hist(x*13, 20)
hist((x*13)%%12, 20)
par(mfrow=c(3,1))
hist(x, 10)
hist(x*13, 20)
hist((x*13)%%202, 20)
x
x<-list(shoot_me='bang', i_need_bullets='bang', dont_shoot = 'no')
x
x['shoot_me']
x['shoot_me'][1]
x['shoot_me'][[1]]
x['shoot_me'][[1]][1]
x<-list('shoot_me'='bang', 'i_need_bullets'='bang', 'dont_shoot' = 'no')
x
x['shoot_me'][[1]][1]
x['shoot_me'][[1]]
x['shoot_me'][1]
names(x['shoot_me'][1])
sample(1:1024, 20, replace =F)
a<-sample(1:1024, 20, replace =F)
b<-sample(1:1024, 20, replace =F)
a
b
ax<-rep(0, 1024)
ax[a]<-1
x<-get_filter_array(1024, 20)
y<-get_filter_array(1024, 20)
get_filter_array<-function(n, m)
{
a<-sample(1:n, m, replace =F)
ax<-rep(0, n)
ax[a]<-1
c(ax)
}
x<-get_filter_array(1024, 20)
y<-get_filter_array(1024, 20)
x
y
T
sum(T)
matrix(c(1,2,3,4) ncol=2, nrow=2)
matrix(c(1,2,3,4), ncol=2, nrow=2)
matrix(c(1,2,3,4), nrow=2, ncol = 2)
get_counts<-function(x,y)
{
# Produces matrix:
## 00, 10
## 01, 11
martix(c(sum(x==0 & y==0), sum(x==0 & y==1),
sum(x==1 & y==0), sum(x==1 & y==1)), nrow=2, ncol=2)
}
get_counts(x,y)
get_counts<-function(x,y)
{
# Produces matrix:
## 00, 10
## 01, 11
matrix(c(sum(x==0 & y==0), sum(x==0 & y==1),
sum(x==1 & y==0), sum(x==1 & y==1)), nrow=2, ncol=2)
}
get_counts(x,y)
chisq.test(get_counts(x,y))
chisq.test(get_counts(x,y), simulate.p.value = T)
summary(chisq.test(get_counts(x,y), simulate.p.value = T))
chi<-chisq.test(get_counts(x,y), simulate.p.value = T)
chi$p.value
encode_position<-function(positions, prime_num, modulus)
{
c((positions*prime_num)%%modulus
}
encode_position<-function(positions, prime_num, modulus)
{
c((positions*prime_num)%%modulus)
}
encode_position(1:1000, 997, 1024)
hist(encode_position(1:1000, 997, 1024))
hist(encode_position(1:3000, 997, 1024))
hist(encode_position(1:3000, 997, 1024), bins = 100)
hist(encode_position(1:3000, 997, 1024), 100)
library(foreach)
library(dp)
library(dplyr)
a<-sample(1:1024, 20, replace =F)
b<-sample(1:1024, 20, replace =F)
ax<-rep(0, 1024)
ax[a]<-1
?ecdf()
nullplot()
?nullplot()
??nullplot()
?read.csv()
labels<-c('CHROM', 'POS', 'ID', 'REF', 'ALT', 'QUAL', 'FILTER', 'INFO', 'FORMAT')
?intersect()
?intersect()
handle_pair_comparison<-function(x,y,pos_col, prime_num, modulus)
{
gene_col<- 'gene'
names(x)<-c(labels, names(x[ncol(x)]), gene_col)
names(y)<-c(labels, names(y[ncol(y)]), gene_col)
genes<-intersect(unique(select(x, gene_col)), unique(select(y, gene_col)))
print(head(x))
print(head(filter(x, gene == genes[1])))
# x_bit<-parse_gene(x, genes, gene_col, pos_col, prime_num, modulus)
# y_bit<-parse_gene(x, genes, gene_col, pos_col, prime_num, modulus)
# print(get_counts(x_bit, y_bit))
}
handle_pair_comparison(a,b, 'POS', 307, 1024)
matrix(c(1000,10,10,100), nrow=2, ncol=2)
chisq.test(matrix(c(1000,10,10,100), nrow=2, ncol=2))
x<-chisq.test(matrix(c(1000,10,10,100), nrow=2, ncol=2))
?chisq.test()
get_counts<-function(x,y)
{
c(sum(x==0 & y==0), sum(x==0 & y==1), sum(x==1 & y==0), sum(x==1 & y==1))
}
#
# chi<-chisq.test(get_counts(x,y), simulate.p.value = T)
bit_array_to_matrix<-function(x,y)
{
counts<-foreach(i = 1:nrow(x), .combine = rbind) % do%
{
nums<-get_counts(as.vector(x[i,]), as.vector(y[i]))
print(nums)
c(nums)
}
print(counts)
# matrix(c(sum(counts[,1]), sum(counts[,2]), sum(counts[,3]), sum(counts[,4])), nrow=2, ncol=2)
}
encode_position<-function(positions, prime_num, modulus)
{
ones<-(positions*prime_num)%%modulus
ax<-rep(0, modulus)
ax[ones]<-1
c(ax)
}
parse_gene<-function(vcf, gene_list, gene_col, pos_col, prime_num, modulus)
{
foreach(current_gene = gene_list, .combine = rbind) %do%
{
positions<-vcf[vcf$gene== current_gene,]$POS
encoded_pos<-encode_position(positions, prime_num, modulus)
}
}
handle_pair_comparison<-function(x,y,pos_col, prime_num, modulus)
{
gene_col <- 'gene'
names(x)<-c(labels, names(x[ncol(x)]), gene_col)
names(y)<-c(labels, names(y[ncol(y)]), gene_col)
genes<-unlist(intersect(unique(select(x, gene_col)), unique(select(y, gene_col))))
x_bit<-parse_gene(x, genes, gene_col, pos_col, prime_num, modulus)
y_bit<-parse_gene(x, genes, gene_col, pos_col, prime_num, modulus)
contin_tab <- get_counts(x_bit, y_bit)
print(contin_tab)
chi<-chisq.test(contin_tab, simulate.p.value = T)
c(chi$p.value)
}
print(handle_pair_comparison(a,b, 'POS', 307, 1024))
x<-c(rep(1, 60), rep(2, 20), rep(3, 10), rep(4, 5), rep(5, 3), rep(6, 3), rep(7, 2), rep(8,2), rep(9,2), rep(10,1))
hist(x,10)
hist(x,11)
hist(x,20)
hist(x,12)
hist(x,100)
hist(dat$Proportion, 30,
col='blue',
xlab = 'Proportion of sites shared',
ylab = 'Frequency',
family='Times',
cex.lab= 2,
cex.axis = 1.5,
main = '',
xlim = c(0.40,1))
setwd('/Users/john.mcgonigle/scripts/persistent_id')
dat<-read.csv('vcf_comparison_summary.vcf')
head(dat)
nrow(dat)
png(file='Initial_analysis_histogram_persitentID.png', width = 1000, height = 600)
par(mar=c(5,5,1,1))
hist(dat$Proportion, 30,
col='blue',
xlab = 'Proportion of sites shared',
ylab = 'Frequency',
family='Times',
cex.lab= 2,
cex.axis = 1.5,
main = '',
xlim = c(0.40,1))
dev.off()
lamda<-(dat$Proportion*100)/length(dat$Proportion)
dat[dat$Proportion>0.9,]
(a + b + 1) * (a + b) // 2 + b
p<-median(dat$Proportion)
0.95-p/  sqrt(((p*(1-p))/length(dat$Proportion)))
pnorm(-9.21, mean = 0.5)
0.95-0.49/sd(dat$Proportion)
pnorm(-9.38)
x<-c(rep(1, 60), rep(2, 20), rep(3, 10), rep(4, 5), rep(5, 3), rep(6, 3), rep(7, 2), rep(8,2), rep(9,2), rep(10,1))
hist(x,100)
